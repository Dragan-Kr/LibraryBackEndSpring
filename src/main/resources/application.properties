#spring.datasource.url=jdbc:postgresql://localhost/library
#spring.datasource.username=postgres
#spring.datasource.password=11AA22aa
#spring.datasource.driverClassName=org.postgresql.Driver#
##
##spring.jpa.hibernate.hbm2ddl.auto=update
##spring.jpa.hibernate.ejb.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy
##spring.jpa.hibernate.show_sql=true
##spring.jpa.hibernate.format_sql=true
##spring.jpa.hibernate.use_sql_comments=false
##spring.jpa.hibernate.type=all
##spring.jpa.hibernate.disableConnectionTracking=true
##spring.jpa.hibernate.default_schema=dental
##spring.jackson.serialization.fail-on-empty-beans = false


spring.mail.username=apikey
spring.mail.password=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
spring.mail.port=587
spring.mail.host=smtp.sendgrid.net
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB


#Spring DataSource drajver koji će se koristiti za komunikaciju aplikacije sa bazom
spring.datasource.driverClassName=org.postgresql.Driver

#Navodi se baza koja se koristi
spring.datasource.platform=postgres

#Navodi se URL do baze koja je pokrenuta u lokalu na podrazumevanom portu 5432 i na serveru je kreirana šema baze pod nazivom "jpa"
#https://www.pgadmin.org/docs/pgadmin4/4.14/schema_dialog.html (ako koristimo Hibernate za kreiranje tabela, SQL deo sa linka nije potreban)
spring.datasource.url=jdbc:postgresql://localhost:5432/library

#Navode se kredencijali za konekciju na server baze
spring.datasource.username=postgres
spring.datasource.password=11AA22aa

#Umesto da sami pišemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako želimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji će Spring Boot automatski pokrenuti pri pokretanju aplikacije

#bilo create-drop umjesto update
spring.jpa.hibernate.ddl-auto = update

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
